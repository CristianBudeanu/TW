@model IEnumerable<EasyBreath.Domain.Entities.Products.Product>
@using EasyBreath.web.Extensions

@{
     Layout = "~/Views/Shared/_Layout.cshtml";
     var user = System.Web.HttpContext.Current.GetMySessionObject();
}

<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>

<section id="breadcrumbs" class="breadcrumbs" style="margin-top: 69px">
     <div class="container text-register">
          <div class="d-flex justify-content-between align-items-center">
               <h2 class="page-title">Shop</h2>
               <ol>
                    <li><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li>Shop</li>
               </ol>
          </div>

     </div>
</section>

<section>
     <div class="container text-register" data-aos="fade-up" style="margin-top: -50px">
          <h2 style="text-align: center">Vitamins & supplements</h2>
          @if ((user != null) && (user.AccessLevel == EasyBreath.Domain.Enum.URole.ADMINISTRATOR))
          {
               <h4 style="text-align: right">

                    @Html.ActionLink("Add Product", "CreatePage")

               </h4>
          }
          <div class="row">
               <div class="MultiCarousel" data-items="1,3,5,6" data-slide="1" id="MultiCarousel" data-interval="1000">
                    <div class="MultiCarousel-inner">
                         <div class="products text-register">
                              @foreach (var item in Model)
                              {
                                   <div class="item" style="border: 100px">
                                        <img style="width: 300px; height: 300px; object-fit: cover; border-radius: 20px; border: 1px solid #ddd; border-radius: 4px; padding: 7px" src="@Html.DisplayFor(modelItem => item.Thumbnail)" />
                                        <h2 class="lead">@Html.DisplayFor(modelItem => item.Name)</h2>
                                        <h7>#@Html.DisplayFor(modelItem => item.Id) &emsp;&emsp;&emsp;&emsp;&emsp; Available: @Html.DisplayFor(modelItem => item.Amount)</h7>
                                        <p>@Html.DisplayFor(modelItem => item.Price)</p>
                                        @if ((user != null) && (user.AccessLevel == EasyBreath.Domain.Enum.URole.ADMINISTRATOR))
                                        {
                                             <p>
                                                  @Html.ActionLink("Edit", "Edit", new { id = item.Id }) &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;
                                                  @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                             </p>
                                        }
                                        @if ((string)System.Web.HttpContext.Current.Session["LoginStatus"] == "login")
                                        {
                                        <p>
                                             @Html.ActionLink("AddToCart", "AddToCart", "Cart", new { id = item.Id }, null)

                                        </p>
                                        }
                                   </div>
                              }
                         </div>
                    </div>
                    <button class="btn btn-primary leftLst"><</button>
                    <button class="btn btn-primary rightLst">></button>
               </div>
          </div>
     </div>
</section>

<script>
     $(document).ready(function () {
          var itemsMainDiv = ('.MultiCarousel');
          var itemsDiv = ('.MultiCarousel-inner');
          var itemWidth = "";

          $('.leftLst, .rightLst').click(function () {
               var condition = $(this).hasClass("leftLst");
               if (condition)
                    click(0, this);
               else
                    click(1, this)
          });

          ResCarouselSize();




          $(window).resize(function () {
               ResCarouselSize();
          });

          //this function define the size of the items
          function ResCarouselSize() {
               var incno = 0;
               var dataItems = ("data-items");
               var itemClass = ('.item');
               var id = 0;
               var btnParentSb = '';
               var itemsSplit = '';
               var sampwidth = $(itemsMainDiv).width();
               var bodyWidth = $('body').width();
               $(itemsDiv).each(function () {
                    id = id + 1;
                    var itemNumbers = $(this).find(itemClass).length;
                    btnParentSb = $(this).parent().attr(dataItems);
                    itemsSplit = btnParentSb.split(',');
                    $(this).parent().attr("id", "MultiCarousel" + id);


                    if (bodyWidth >= 1200) {
                         incno = itemsSplit[3];
                         itemWidth = sampwidth / incno;
                    }
                    else if (bodyWidth >= 992) {
                         incno = itemsSplit[2];
                         itemWidth = sampwidth / incno;
                    }
                    else if (bodyWidth >= 768) {
                         incno = itemsSplit[1];
                         itemWidth = sampwidth / incno;
                    }
                    else {
                         incno = itemsSplit[0];
                         itemWidth = sampwidth / incno;
                    }
                    $(this).css({ 'transform': 'translateX(0px)', 'width': itemWidth * itemNumbers });
                    $(this).find(itemClass).each(function () {
                         $(this).outerWidth(itemWidth);
                    });

                    $(".leftLst").addClass("over");
                    $(".rightLst").removeClass("over");

               });
          }


          //this function used to move the items
          function ResCarousel(e, el, s) {
               var leftBtn = ('.leftLst');
               var rightBtn = ('.rightLst');
               var translateXval = '';
               var divStyle = $(el + ' ' + itemsDiv).css('transform');
               var values = divStyle.match(/-?[\d\.]+/g);
               var xds = Math.abs(values[4]);
               if (e == 0) {
                    translateXval = parseInt(xds) - parseInt(itemWidth * s);
                    $(el + ' ' + rightBtn).removeClass("over");

                    if (translateXval <= itemWidth / 2) {
                         translateXval = 0;
                         $(el + ' ' + leftBtn).addClass("over");
                    }
               }
               else if (e == 1) {
                    var itemsCondition = $(el).find(itemsDiv).width() - $(el).width();
                    translateXval = parseInt(xds) + parseInt(itemWidth * s);
                    $(el + ' ' + leftBtn).removeClass("over");

                    if (translateXval >= itemsCondition - itemWidth / 2) {
                         translateXval = itemsCondition;
                         $(el + ' ' + rightBtn).addClass("over");
                    }
               }
               $(el + ' ' + itemsDiv).css('transform', 'translateX(' + -translateXval + 'px)');
          }

          //It is used to get some elements from btn
          function click(ell, ee) {
               var Parent = "#" + $(ee).parent().attr("id");
               var slide = $(Parent).attr("data-slide");
               ResCarousel(ell, Parent, slide);
          }

     });
</script>